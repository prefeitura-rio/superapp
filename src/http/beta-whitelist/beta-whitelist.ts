/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * API RMI
 * API para gerenciamento de dados de cidad√£os do Rio de Janeiro, incluindo autodeclara√ß√£o de informa√ß√µes e verifica√ß√£o de contato.
 * OpenAPI spec version: 1.0
 */
import type {
  GetAdminBetaWhitelistParams,
  HandlersErrorResponse,
  HandlersSuccessResponse,
  ModelsBetaStatusResponse,
  ModelsBetaWhitelistBulkRemoveRequest,
  ModelsBetaWhitelistBulkRequest,
  ModelsBetaWhitelistListResponse,
  ModelsBetaWhitelistMoveRequest,
  ModelsBetaWhitelistRequest,
  ModelsBetaWhitelistResponse
} from '.././models';

import { customFetch } from '../../../custom-fetch';

/**
 * Lista telefones na whitelist beta com pagina√ß√£o (apenas administradores)
 * @summary Listar telefones na whitelist
 */
export type getAdminBetaWhitelistResponse200 = {
  data: ModelsBetaWhitelistListResponse
  status: 200
}

export type getAdminBetaWhitelistResponse400 = {
  data: HandlersErrorResponse
  status: 400
}

export type getAdminBetaWhitelistResponse401 = {
  data: HandlersErrorResponse
  status: 401
}

export type getAdminBetaWhitelistResponse403 = {
  data: HandlersErrorResponse
  status: 403
}

export type getAdminBetaWhitelistResponse429 = {
  data: HandlersErrorResponse
  status: 429
}

export type getAdminBetaWhitelistResponse500 = {
  data: HandlersErrorResponse
  status: 500
}
    
export type getAdminBetaWhitelistResponseComposite = getAdminBetaWhitelistResponse200 | getAdminBetaWhitelistResponse400 | getAdminBetaWhitelistResponse401 | getAdminBetaWhitelistResponse403 | getAdminBetaWhitelistResponse429 | getAdminBetaWhitelistResponse500;
    
export type getAdminBetaWhitelistResponse = getAdminBetaWhitelistResponseComposite & {
  headers: Headers;
}

export const getGetAdminBetaWhitelistUrl = (params?: GetAdminBetaWhitelistParams,) => {
  const normalizedParams = new URLSearchParams();

  Object.entries(params || {}).forEach(([key, value]) => {
    
    if (value !== undefined) {
      normalizedParams.append(key, value === null ? 'null' : value.toString())
    }
  });

  const stringifiedParams = normalizedParams.toString();

  return stringifiedParams.length > 0 ? `/admin/beta/whitelist?${stringifiedParams}` : `/admin/beta/whitelist`
}

export const getAdminBetaWhitelist = async (params?: GetAdminBetaWhitelistParams, options?: RequestInit): Promise<getAdminBetaWhitelistResponse> => {
  
  return customFetch<getAdminBetaWhitelistResponse>(getGetAdminBetaWhitelistUrl(params),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


/**
 * Adiciona m√∫ltiplos n√∫meros de telefone a um grupo beta (apenas administradores)
 * @summary Adicionar m√∫ltiplos telefones √† whitelist
 */
export type postAdminBetaWhitelistBulkAddResponse200 = {
  data: ModelsBetaWhitelistResponse[]
  status: 200
}

export type postAdminBetaWhitelistBulkAddResponse400 = {
  data: HandlersErrorResponse
  status: 400
}

export type postAdminBetaWhitelistBulkAddResponse401 = {
  data: HandlersErrorResponse
  status: 401
}

export type postAdminBetaWhitelistBulkAddResponse403 = {
  data: HandlersErrorResponse
  status: 403
}

export type postAdminBetaWhitelistBulkAddResponse404 = {
  data: HandlersErrorResponse
  status: 404
}

export type postAdminBetaWhitelistBulkAddResponse429 = {
  data: HandlersErrorResponse
  status: 429
}

export type postAdminBetaWhitelistBulkAddResponse500 = {
  data: HandlersErrorResponse
  status: 500
}
    
export type postAdminBetaWhitelistBulkAddResponseComposite = postAdminBetaWhitelistBulkAddResponse200 | postAdminBetaWhitelistBulkAddResponse400 | postAdminBetaWhitelistBulkAddResponse401 | postAdminBetaWhitelistBulkAddResponse403 | postAdminBetaWhitelistBulkAddResponse404 | postAdminBetaWhitelistBulkAddResponse429 | postAdminBetaWhitelistBulkAddResponse500;
    
export type postAdminBetaWhitelistBulkAddResponse = postAdminBetaWhitelistBulkAddResponseComposite & {
  headers: Headers;
}

export const getPostAdminBetaWhitelistBulkAddUrl = () => {


  

  return `/admin/beta/whitelist/bulk-add`
}

export const postAdminBetaWhitelistBulkAdd = async (modelsBetaWhitelistBulkRequest: ModelsBetaWhitelistBulkRequest, options?: RequestInit): Promise<postAdminBetaWhitelistBulkAddResponse> => {
  
  return customFetch<postAdminBetaWhitelistBulkAddResponse>(getPostAdminBetaWhitelistBulkAddUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      modelsBetaWhitelistBulkRequest,)
  }
);}


/**
 * Move m√∫ltiplos n√∫meros de telefone de um grupo beta para outro (apenas administradores)
 * @summary Mover m√∫ltiplos telefones entre grupos
 */
export type postAdminBetaWhitelistBulkMoveResponse200 = {
  data: HandlersSuccessResponse
  status: 200
}

export type postAdminBetaWhitelistBulkMoveResponse400 = {
  data: HandlersErrorResponse
  status: 400
}

export type postAdminBetaWhitelistBulkMoveResponse401 = {
  data: HandlersErrorResponse
  status: 401
}

export type postAdminBetaWhitelistBulkMoveResponse403 = {
  data: HandlersErrorResponse
  status: 403
}

export type postAdminBetaWhitelistBulkMoveResponse404 = {
  data: HandlersErrorResponse
  status: 404
}

export type postAdminBetaWhitelistBulkMoveResponse429 = {
  data: HandlersErrorResponse
  status: 429
}

export type postAdminBetaWhitelistBulkMoveResponse500 = {
  data: HandlersErrorResponse
  status: 500
}
    
export type postAdminBetaWhitelistBulkMoveResponseComposite = postAdminBetaWhitelistBulkMoveResponse200 | postAdminBetaWhitelistBulkMoveResponse400 | postAdminBetaWhitelistBulkMoveResponse401 | postAdminBetaWhitelistBulkMoveResponse403 | postAdminBetaWhitelistBulkMoveResponse404 | postAdminBetaWhitelistBulkMoveResponse429 | postAdminBetaWhitelistBulkMoveResponse500;
    
export type postAdminBetaWhitelistBulkMoveResponse = postAdminBetaWhitelistBulkMoveResponseComposite & {
  headers: Headers;
}

export const getPostAdminBetaWhitelistBulkMoveUrl = () => {


  

  return `/admin/beta/whitelist/bulk-move`
}

export const postAdminBetaWhitelistBulkMove = async (modelsBetaWhitelistMoveRequest: ModelsBetaWhitelistMoveRequest, options?: RequestInit): Promise<postAdminBetaWhitelistBulkMoveResponse> => {
  
  return customFetch<postAdminBetaWhitelistBulkMoveResponse>(getPostAdminBetaWhitelistBulkMoveUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      modelsBetaWhitelistMoveRequest,)
  }
);}


/**
 * Remove m√∫ltiplos n√∫meros de telefone da whitelist beta (apenas administradores)
 * @summary Remover m√∫ltiplos telefones da whitelist
 */
export type postAdminBetaWhitelistBulkRemoveResponse200 = {
  data: HandlersSuccessResponse
  status: 200
}

export type postAdminBetaWhitelistBulkRemoveResponse400 = {
  data: HandlersErrorResponse
  status: 400
}

export type postAdminBetaWhitelistBulkRemoveResponse401 = {
  data: HandlersErrorResponse
  status: 401
}

export type postAdminBetaWhitelistBulkRemoveResponse403 = {
  data: HandlersErrorResponse
  status: 403
}

export type postAdminBetaWhitelistBulkRemoveResponse429 = {
  data: HandlersErrorResponse
  status: 429
}

export type postAdminBetaWhitelistBulkRemoveResponse500 = {
  data: HandlersErrorResponse
  status: 500
}
    
export type postAdminBetaWhitelistBulkRemoveResponseComposite = postAdminBetaWhitelistBulkRemoveResponse200 | postAdminBetaWhitelistBulkRemoveResponse400 | postAdminBetaWhitelistBulkRemoveResponse401 | postAdminBetaWhitelistBulkRemoveResponse403 | postAdminBetaWhitelistBulkRemoveResponse429 | postAdminBetaWhitelistBulkRemoveResponse500;
    
export type postAdminBetaWhitelistBulkRemoveResponse = postAdminBetaWhitelistBulkRemoveResponseComposite & {
  headers: Headers;
}

export const getPostAdminBetaWhitelistBulkRemoveUrl = () => {


  

  return `/admin/beta/whitelist/bulk-remove`
}

export const postAdminBetaWhitelistBulkRemove = async (modelsBetaWhitelistBulkRemoveRequest: ModelsBetaWhitelistBulkRemoveRequest, options?: RequestInit): Promise<postAdminBetaWhitelistBulkRemoveResponse> => {
  
  return customFetch<postAdminBetaWhitelistBulkRemoveResponse>(getPostAdminBetaWhitelistBulkRemoveUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      modelsBetaWhitelistBulkRemoveRequest,)
  }
);}


/**
 * Adiciona um n√∫mero de telefone a um grupo beta (apenas administradores)
 * @summary Adicionar telefone √† whitelist
 */
export type postAdminBetaWhitelistPhoneNumberResponse200 = {
  data: ModelsBetaWhitelistResponse
  status: 200
}

export type postAdminBetaWhitelistPhoneNumberResponse400 = {
  data: HandlersErrorResponse
  status: 400
}

export type postAdminBetaWhitelistPhoneNumberResponse401 = {
  data: HandlersErrorResponse
  status: 401
}

export type postAdminBetaWhitelistPhoneNumberResponse403 = {
  data: HandlersErrorResponse
  status: 403
}

export type postAdminBetaWhitelistPhoneNumberResponse404 = {
  data: HandlersErrorResponse
  status: 404
}

export type postAdminBetaWhitelistPhoneNumberResponse409 = {
  data: HandlersErrorResponse
  status: 409
}

export type postAdminBetaWhitelistPhoneNumberResponse429 = {
  data: HandlersErrorResponse
  status: 429
}

export type postAdminBetaWhitelistPhoneNumberResponse500 = {
  data: HandlersErrorResponse
  status: 500
}
    
export type postAdminBetaWhitelistPhoneNumberResponseComposite = postAdminBetaWhitelistPhoneNumberResponse200 | postAdminBetaWhitelistPhoneNumberResponse400 | postAdminBetaWhitelistPhoneNumberResponse401 | postAdminBetaWhitelistPhoneNumberResponse403 | postAdminBetaWhitelistPhoneNumberResponse404 | postAdminBetaWhitelistPhoneNumberResponse409 | postAdminBetaWhitelistPhoneNumberResponse429 | postAdminBetaWhitelistPhoneNumberResponse500;
    
export type postAdminBetaWhitelistPhoneNumberResponse = postAdminBetaWhitelistPhoneNumberResponseComposite & {
  headers: Headers;
}

export const getPostAdminBetaWhitelistPhoneNumberUrl = (phoneNumber: string,) => {


  

  return `/admin/beta/whitelist/${phoneNumber}`
}

export const postAdminBetaWhitelistPhoneNumber = async (phoneNumber: string,
    modelsBetaWhitelistRequest: ModelsBetaWhitelistRequest, options?: RequestInit): Promise<postAdminBetaWhitelistPhoneNumberResponse> => {
  
  return customFetch<postAdminBetaWhitelistPhoneNumberResponse>(getPostAdminBetaWhitelistPhoneNumberUrl(phoneNumber),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      modelsBetaWhitelistRequest,)
  }
);}


/**
 * Remove um n√∫mero de telefone da whitelist beta (apenas administradores)
 * @summary Remover telefone da whitelist
 */
export type deleteAdminBetaWhitelistPhoneNumberResponse200 = {
  data: ModelsBetaWhitelistResponse
  status: 200
}

export type deleteAdminBetaWhitelistPhoneNumberResponse400 = {
  data: HandlersErrorResponse
  status: 400
}

export type deleteAdminBetaWhitelistPhoneNumberResponse401 = {
  data: HandlersErrorResponse
  status: 401
}

export type deleteAdminBetaWhitelistPhoneNumberResponse403 = {
  data: HandlersErrorResponse
  status: 403
}

export type deleteAdminBetaWhitelistPhoneNumberResponse404 = {
  data: HandlersErrorResponse
  status: 404
}

export type deleteAdminBetaWhitelistPhoneNumberResponse429 = {
  data: HandlersErrorResponse
  status: 429
}

export type deleteAdminBetaWhitelistPhoneNumberResponse500 = {
  data: HandlersErrorResponse
  status: 500
}
    
export type deleteAdminBetaWhitelistPhoneNumberResponseComposite = deleteAdminBetaWhitelistPhoneNumberResponse200 | deleteAdminBetaWhitelistPhoneNumberResponse400 | deleteAdminBetaWhitelistPhoneNumberResponse401 | deleteAdminBetaWhitelistPhoneNumberResponse403 | deleteAdminBetaWhitelistPhoneNumberResponse404 | deleteAdminBetaWhitelistPhoneNumberResponse429 | deleteAdminBetaWhitelistPhoneNumberResponse500;
    
export type deleteAdminBetaWhitelistPhoneNumberResponse = deleteAdminBetaWhitelistPhoneNumberResponseComposite & {
  headers: Headers;
}

export const getDeleteAdminBetaWhitelistPhoneNumberUrl = (phoneNumber: string,) => {


  

  return `/admin/beta/whitelist/${phoneNumber}`
}

export const deleteAdminBetaWhitelistPhoneNumber = async (phoneNumber: string, options?: RequestInit): Promise<deleteAdminBetaWhitelistPhoneNumberResponse> => {
  
  return customFetch<deleteAdminBetaWhitelistPhoneNumberResponse>(getDeleteAdminBetaWhitelistPhoneNumberUrl(phoneNumber),
  {      
    ...options,
    method: 'DELETE'
    
    
  }
);}


/**
 * Verifica se um n√∫mero de telefone est√° na whitelist beta (com cache)
 * @summary Verificar status beta
 */
export type getPhonePhoneNumberBetaStatusResponse200 = {
  data: ModelsBetaStatusResponse
  status: 200
}

export type getPhonePhoneNumberBetaStatusResponse400 = {
  data: HandlersErrorResponse
  status: 400
}

export type getPhonePhoneNumberBetaStatusResponse429 = {
  data: HandlersErrorResponse
  status: 429
}

export type getPhonePhoneNumberBetaStatusResponse500 = {
  data: HandlersErrorResponse
  status: 500
}
    
export type getPhonePhoneNumberBetaStatusResponseComposite = getPhonePhoneNumberBetaStatusResponse200 | getPhonePhoneNumberBetaStatusResponse400 | getPhonePhoneNumberBetaStatusResponse429 | getPhonePhoneNumberBetaStatusResponse500;
    
export type getPhonePhoneNumberBetaStatusResponse = getPhonePhoneNumberBetaStatusResponseComposite & {
  headers: Headers;
}

export const getGetPhonePhoneNumberBetaStatusUrl = (phoneNumber: string,) => {


  

  return `/phone/${phoneNumber}/beta-status`
}

export const getPhonePhoneNumberBetaStatus = async (phoneNumber: string, options?: RequestInit): Promise<getPhonePhoneNumberBetaStatusResponse> => {
  
  return customFetch<getPhonePhoneNumberBetaStatusResponse>(getGetPhonePhoneNumberBetaStatusUrl(phoneNumber),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


