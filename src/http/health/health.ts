/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * RMI API
 * API for managing citizen data with self-declared information. This API provides endpoints for retrieving and updating citizen information, with support for caching and data validation. Self-declared data takes precedence over base data when available.
 * OpenAPI spec version: 1.0
 */
import type { HandlersHealthResponse } from '.././models'

import { customFetch } from '../../../custom-fetch'

/**
 * Checks the health of the API and its dependencies (MongoDB and Redis). Returns detailed status for each service.
 * @summary Health check endpoint
 */
export type getHealthResponse200 = {
  data: HandlersHealthResponse
  status: 200
}

export type getHealthResponse503 = {
  data: HandlersHealthResponse
  status: 503
}

export type getHealthResponseComposite =
  | getHealthResponse200
  | getHealthResponse503

export type getHealthResponse = getHealthResponseComposite & {
  headers: Headers
}

export const getGetHealthUrl = () => {
  return `/health`
}

export const getHealth = async (
  options?: RequestInit
): Promise<getHealthResponse> => {
  return customFetch<getHealthResponse>(getGetHealthUrl(), {
    ...options,
    method: 'GET',
  })
}
